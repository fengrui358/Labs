// <auto-generated />
using System;
using ContextLab.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContextLab.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20210413065212_Add-Posts")]
    partial class AddPosts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("ContextLab.Entities.Author", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasComment("名字");

                    b.Property<string>("Title")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("BlogAuthorTable");

                    b
                        .HasComment("作者");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "test"
                        });
                });

            modelBuilder.Entity("ContextLab.Entities.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("AuthorId")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<decimal>("PriceDecimal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("BlogId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            BlogId = 1,
                            AuthorId = 1L,
                            Price = 0.0,
                            PriceDecimal = 0m,
                            Url = "test1"
                        },
                        new
                        {
                            BlogId = 2,
                            AuthorId = 1L,
                            Price = 12.545443000000001,
                            PriceDecimal = 125.454m,
                            Url = "test2"
                        });
                });

            modelBuilder.Entity("ContextLab.Entities.Other", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("LastUpdatedDateTimeOffset")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TestString")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("change_new_column_name");

                    b.HasKey("Id");

                    b.ToTable("other-entity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1379c923-3595-468c-8b41-ecc3d8d6f455"),
                            LastUpdated = new DateTime(2021, 4, 12, 17, 28, 35, 0, DateTimeKind.Unspecified),
                            LastUpdatedDateTimeOffset = new DateTimeOffset(new DateTime(2021, 4, 12, 17, 28, 35, 0, DateTimeKind.Unspecified), new TimeSpan(0, 8, 0, 0, 0)),
                            TestString = "1379c9233595468c8b41ecc3d8d6f455"
                        });
                });

            modelBuilder.Entity("ContextLab.Entities.Post", b =>
                {
                    b.Property<long>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500000)
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Post");

                    b.HasData(
                        new
                        {
                            PostId = 1L,
                            BlogId = 1,
                            Content = "PostC1",
                            Title = "Post1"
                        },
                        new
                        {
                            PostId = 2L,
                            BlogId = 1,
                            Content = "PostC2",
                            Title = "Post2"
                        },
                        new
                        {
                            PostId = 3L,
                            BlogId = 2,
                            Content = "PostC3",
                            Title = "Post3"
                        });
                });

            modelBuilder.Entity("ContextLab.Entities.Blog", b =>
                {
                    b.HasOne("ContextLab.Entities.Author", "Author")
                        .WithMany("Blogs")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("ContextLab.Entities.Post", b =>
                {
                    b.HasOne("ContextLab.Entities.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("ContextLab.Entities.Author", b =>
                {
                    b.Navigation("Blogs");
                });

            modelBuilder.Entity("ContextLab.Entities.Blog", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
